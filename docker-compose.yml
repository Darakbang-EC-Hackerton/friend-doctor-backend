services:
  db:
    container_name: mysql
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: friend_doctor
      MYSQL_ROOT_PASSWORD: 'COMPOSE_ROOT_PASSWORD'
      MYSQL_USER: 'COMPOSE_USER'
      MYSQL_PASSWORD: 'COMPOSE_PASSWORD'
    ports:
      - "3307:3306"
    volumes:
      - "friend_doctor_mysql:/var/lib/mysql"

  module-api:
    container_name: module-api
    build:
      context: .
      dockerfile: module-api/Dockerfile
    ports:
      - "8081:8080"
    environment:
      spring.datasource.url: jdbc:mysql://db:3306/friend_doctor
      spring.datasource.username: COMPOSE_USER
      spring.datasource.password: COMPOSE_PASSWORD
    depends_on:
      - db

  module-scheduler:
    container_name: module-scheduler
    build:
      context: .
      dockerfile: module-scheduler/Dockerfile
    environment:
      spring.datasource.url: jdbc:mysql://db:3306/friend_doctor
      spring.datasource.username: COMPOSE_USER
      spring.datasource.password: COMPOSE_PASSWORD
    ports:
      - "8082:8080"
    depends_on:
      - db

volumes:
  friend_doctor_mysql: